{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferid\\\\Desktop\\\\Polito\\\\Katya\\\\client\\\\src\\\\components\\\\Admin\\\\Execute_Exam\\\\Execute_exam.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\n\nconst ExecuteExam = () => {\n  const [students, setStudents] = useState([]);\n  const [studentMark, setStudentMark] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    let response = await fetch(\"http://localhost:3000/api/students/available\");\n    let responseJson = await response.json();\n    setStudents(responseJson);\n  };\n\n  const handleStudentMark = value => {\n    setStudentMark(Number(value));\n  };\n\n  function useCurrentUserData() {}\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"execute-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Exam created by TEACHER FOR COURSE.NAME OF JULY CALL\")), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"\\u2116\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Student ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Surname\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Mark\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Presence\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"Grade\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, students && students.map((val, index, arr) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: val.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, Object.keys(val).map((key, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"td\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 45\n        }\n      }, val[key]));\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: val.id,\n      onFocus: () => setCurrentUser(val.id) // onChange={e=>useCurrentUserData(e.target.value)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: () => setCurrentUser(null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }));\n  })))));\n};\n\nexport default ExecuteExam;","map":{"version":3,"sources":["C:/Users/ferid/Desktop/Polito/Katya/client/src/components/Admin/Execute_Exam/Execute_exam.js"],"names":["React","useEffect","useState","Form","Button","Col","ExecuteExam","students","setStudents","studentMark","setStudentMark","currentUser","setCurrentUser","fetchData","response","fetch","responseJson","json","handleStudentMark","value","Number","useCurrentUserData","map","val","index","arr","id","Object","keys","key"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Form, Button, Col,} from 'react-bootstrap';\r\n\r\n\r\nconst ExecuteExam = () => {\r\n\r\n    const [students, setStudents] = useState([]);\r\n    const [studentMark, setStudentMark] = useState(null)\r\n    const [currentUser, setCurrentUser]=useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n\r\n    }, [])\r\n\r\n    const fetchData = async () => {\r\n        let response = await fetch(\"http://localhost:3000/api/students/available\")\r\n        let responseJson = await response.json();\r\n        setStudents(responseJson)\r\n\r\n    }\r\n\r\n    const handleStudentMark = (value) => {\r\n        setStudentMark(Number(value))\r\n    }\r\n\r\n    function useCurrentUserData(){}\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"execute-title\">\r\n                    <p>Exam created by TEACHER FOR COURSE.NAME OF JULY CALL</p>\r\n                </div>\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <th>â„–</th>\r\n                        <th>Student ID</th>\r\n                        <th>Name</th>\r\n                        <th>Surname</th>\r\n                        <th>Mark</th>\r\n                        <th>Presence</th>\r\n                        <th>Time</th>\r\n                        <th>Grade</th>\r\n                    </tr>\r\n                    </tbody>\r\n\r\n                    <tbody>\r\n                    {students\r\n                    && students.map((val, index, arr) => {\r\n\r\n                        return (\r\n                            <tr key={val.id}>\r\n                                {Object.keys(val).map((key, index) => {\r\n\r\n                                    return (\r\n                                        <>\r\n                                            <td key={key}>{val[key]}</td>\r\n\r\n                                        </>\r\n                                    )\r\n\r\n                                })}\r\n\r\n                                <input type=\"number\"\r\n                                       name={val.id}\r\n                                       onFocus={()=>setCurrentUser(val.id)}\r\n                                       // onChange={e=>useCurrentUserData(e.target.value)}\r\n\r\n                                />\r\n\r\n                                <input type=\"submit\"\r\n                                       onClick={()=>setCurrentUser(null)}\r\n                                />\r\n\r\n                            </tr>)\r\n                    })\r\n                    }\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ExecuteExam\r\n\r\n"]},"metadata":{},"sourceType":"module"}