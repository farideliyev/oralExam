{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferid\\\\Desktop\\\\Polito\\\\Katya\\\\client\\\\src\\\\components\\\\Student\\\\Student.jsx\";\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport '../Teacher/Teacher.css';\nimport { Formik } from 'formik';\nimport * as Yup from \"yup\";\nconst validationSchema = Yup.object().shape({\n  id: Yup.string().required(\"Id is required\")\n});\n\nconst Student = props => {\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      id: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n    },\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, ({\n    handleChange,\n    handleSubmit,\n    errors\n  }) => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"Student Id\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"student id\",\n    name: \"id\",\n    onChange: handleChange,\n    className: errors.name ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 47\n      }\n    }, errors.name) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\n\nexport default Student;","map":{"version":3,"sources":["C:/Users/ferid/Desktop/Polito/Katya/client/src/components/Student/Student.jsx"],"names":["React","Form","Button","Formik","Yup","validationSchema","object","shape","id","string","required","Student","props","values","console","log","handleChange","handleSubmit","errors","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAaC,MAAb,QAA0B,iBAA1B;AACA,OAAO,wBAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAGA,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,EAAE,EAAEJ,GAAG,CAACK,MAAJ,GACHC,QADG,CACM,gBADN;AADoC,CAAnB,CAAzB;;AAKA,MAAMC,OAAO,GAAEC,KAAD,IAAS;AAEnB,sBACI,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAE;AAACJ,MAAAA,EAAE,EAAC;AAAJ,KAAvB;AAAgC,IAAA,QAAQ,EAAEK,MAAM,IAAE;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAAoB,KAAvE;AAA0E,IAAA,gBAAgB,EAAER,gBAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAAE;AACFW,IAAAA,YADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA;AAHE,GAAF,kBAKE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,WAAW,EAAC,YAFZ;AAGA,IAAA,IAAI,EAAC,IAHL;AAIA,IAAA,QAAQ,EAAED,YAJV;AAKA,IAAA,SAAS,EAAEE,MAAM,CAACC,IAAP,gBAAe;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCD,MAAM,CAACC,IAAvC,CAAf,GAAqE,IALhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAHJ,eAgBI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,CANJ,CADJ;AA8BH,CAhCD;;AAmCA,eAAeR,OAAf","sourcesContent":["import React from 'react';\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport '../Teacher/Teacher.css';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    id: Yup.string()\r\n    .required(\"Id is required\"),\r\n  });\r\n\r\nconst Student=(props)=>{\r\n\r\n    return (\r\n        <Formik initialValues={{id:\"\"}} onSubmit={values=>{console.log(values)}}  validationSchema={validationSchema}>\r\n         {( {\r\n          handleChange,\r\n          handleSubmit, \r\n          errors\r\n           }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n      \r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Student Id</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"student id\"  \r\n                    name=\"id\"\r\n                    onChange={handleChange}\r\n                    className={errors.name ? (<div className=\"error-message\">{errors.name}</div>) : null}\r\n\r\n                     />\r\n                </Form.Group>\r\n\r\n\r\n                <Button variant=\"primary\" type=\"submit\" >\r\n                    Submit\r\n            </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n\r\nexport default Student"]},"metadata":{},"sourceType":"module"}