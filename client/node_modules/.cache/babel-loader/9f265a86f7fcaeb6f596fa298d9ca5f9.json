{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferid\\\\Desktop\\\\Polito\\\\Katya\\\\client\\\\src\\\\components\\\\Admin\\\\Show_Students\\\\ShowStudents.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport '../Admin.css';\n\nconst ShowStudents = () => {\n  const [students, setStudents] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    let response = await fetch(\"http://localhost:3000/api/students/all\");\n    let responseJson = await response.json();\n    setStudents(responseJson);\n    console.log(students);\n  };\n\n  function counter(max) {\n    debugger;\n    let num = [];\n\n    for (let i = 1; i <= max; i++) {\n      num.push(i);\n    }\n\n    num.forEach(i => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 20\n        }\n      }, i);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Student ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Surname\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Mark\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Presence\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Time\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, students && students.map((val, index, arr) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: val.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, counter(students.length - 1), Object.keys(val).map((key, index) => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 44\n        }\n      }, val[key]);\n    }));\n  }))));\n};\n\nexport default ShowStudents;","map":{"version":3,"sources":["C:/Users/ferid/Desktop/Polito/Katya/client/src/components/Admin/Show_Students/ShowStudents.jsx"],"names":["React","useEffect","useState","ShowStudents","students","setStudents","fetchData","response","fetch","responseJson","json","console","log","counter","max","num","i","push","forEach","map","val","index","arr","id","length","Object","keys","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,cAAP;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAEvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,SAAS;AAEZ,GAHQ,EAGP,EAHO,CAAT;;AAKA,QAAMA,SAAS,GAAG,YAAY;AAC1B,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,CAA1B;AACA,QAAIC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AACAL,IAAAA,WAAW,CAACI,YAAD,CAAX;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEH,GAND;;AAQA,WAASS,OAAT,CAAiBC,GAAjB,EAAqB;AACjB;AACA,QAAIC,GAAG,GAAC,EAAR;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEF,GAAhB,EAAoBE,CAAC,EAArB,EAAyB;AACrBD,MAAAA,GAAG,CAACE,IAAJ,CAASD,CAAT;AACH;;AACAD,IAAAA,GAAG,CAACG,OAAJ,CAAYF,CAAC,IAAE;AACZ,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,CAAL,CAAP;AACH,KAFA;AAIJ;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CADF,CADJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,QAAQ,IACPA,QAAQ,CAACe,GAAT,CAAa,CAACC,GAAD,EAAKC,KAAL,EAAYC,GAAZ,KAAoB;AAE/B,wBAEI;AAAI,MAAA,GAAG,EAAEF,GAAG,CAACG,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGQV,OAAO,CAACT,QAAQ,CAACoB,MAAT,GAAgB,CAAjB,CAHf,EAMIC,MAAM,CAACC,IAAP,CAAYN,GAAZ,EAAiBD,GAAjB,CAAqB,CAACQ,GAAD,EAAKN,KAAL,KAAa;AAC/B,0BAEQ;AAAI,QAAA,GAAG,EAAEM,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeP,GAAG,CAACO,GAAD,CAAlB,CAFR;AAIH,KALA,CANJ,CAFJ;AAoBH,GAtBC,CAFN,CAbJ,CADJ,CADJ;AA+CH,CA9ED;;AAgFA,eAAexB,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport '../Admin.css'\r\n\r\n\r\nconst ShowStudents = () => {\r\n\r\n    const [students, setStudents]=useState([]);\r\n    \r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n\r\n    },[])\r\n\r\n    const fetchData = async () => {\r\n        let response = await fetch(\"http://localhost:3000/api/students/all\")\r\n        let responseJson = await response.json();\r\n        setStudents(responseJson);\r\n        console.log(students)\r\n\r\n    }\r\n\r\n    function counter(max){\r\n        debugger;\r\n        let num=[];\r\n        for(let i=1; i<=max;i++) {\r\n            num.push(i)\r\n        }\r\n         num.forEach(i=>{\r\n            return <td>{i}</td>\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <table >\r\n                <tbody>\r\n                  <tr>\r\n                    <th>Id</th>\r\n                    <th>Student ID</th>\r\n                    <th>Name</th>\r\n                    <th>Surname</th>\r\n                    <th>Mark</th>\r\n                    <th>Presence</th>\r\n                    <th>Time</th>\r\n                </tr>\r\n                </tbody>\r\n                \r\n                <tbody>\r\n                    {students \r\n                   && students.map((val,index, arr) => {\r\n\r\n                        return (\r\n\r\n                            <tr key={val.id}>\r\n\r\n                                {\r\n                                    counter(students.length-1)\r\n                                }\r\n\r\n                               {Object.keys(val).map((key,index)=>{\r\n                                   return(\r\n\r\n                                           <td key={key}>{val[key]}</td>\r\n                                   )\r\n                               })}\r\n                                {/* <td >{val.student_id}</td>\r\n                                <td >{val.name}</td>\r\n                                <td >{val.surname}</td>\r\n                                <td >{val.presence}</td>\r\n                                <td >{val.time}</td> */}\r\n                            </tr>)\r\n                    })\r\n                    }\r\n                </tbody>\r\n                \r\n            </table>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ShowStudents\r\n\r\n"]},"metadata":{},"sourceType":"module"}