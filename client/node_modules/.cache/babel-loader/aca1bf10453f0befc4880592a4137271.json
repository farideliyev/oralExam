{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferid\\\\Desktop\\\\Polito\\\\Katya\\\\client\\\\src\\\\hoc\\\\withAuthRedirect.js\";\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst withAuthRedirect = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => props.isAuth === true ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/teacher',\n      state: {\n        from: props.location\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}));\n\nexport default withAuthRedirect;","map":{"version":3,"sources":["C:/Users/ferid/Desktop/Polito/Katya/client/src/hoc/withAuthRedirect.js"],"names":["React","Redirect","Route","withAuthRedirect","component","Component","rest","props","isAuth","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,QADF,EAEEC,KAFF,QAGO,kBAHP;;AAKA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBACvB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EAAGC,KAAD,IACvBA,KAAK,CAACC,MAAN,KAAgB,IAAhB,gBACI,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,gBAEI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACZE,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAFK,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAWA,eAAeT,gBAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Redirect, \r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nconst withAuthRedirect = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    props.isAuth=== true\r\n      ? <Component {...props} />\r\n      : <Redirect to={{\r\n          pathname: '/teacher',\r\n          state: { from: props.location }\r\n        }} />\r\n  )} />\r\n)\r\n\r\nexport default withAuthRedirect\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}