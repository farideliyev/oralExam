{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferid\\\\Desktop\\\\Polito\\\\Katya\\\\client\\\\src\\\\components\\\\Student\\\\StudentInfo.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, TimePicker } from 'antd';\nimport moment from \"moment\";\nimport './StudentInfo.css';\n\nconst StudentInfo = props => {\n  const [availableDates, setAvailableDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const {\n    grade,\n    time,\n    presence,\n    date = {}\n  } = props.info;\n  let {\n    startDate,\n    endDate,\n    startTime,\n    endTime\n  } = date;\n  useEffect(() => {\n    if (availableDates) {\n      let start = new Date(startDate);\n      let end = new Date(endDate);\n      let difference = end.getDate() - start.getDate();\n\n      if (difference === 1) {\n        setAvailableDates([startDate, endDate]);\n      } else if (difference === 0) {\n        setAvailableDates([startDate]);\n      } else {\n        let necessaryDays = difference - 1;\n        let arrOfDays = [];\n\n        for (let i = 0; i < necessaryDays; i++) {\n          let d = moment(startDate).add(1, \"days\").format(\"YYYY-MM-DD\");\n\n          if (arrOfDays.length !== 0) {\n            let d = moment(arrOfDays[arrOfDays.length - 1]).add(1, \"days\").format(\"YYYY-MM-DD\");\n            arrOfDays.push(d);\n          }\n\n          arrOfDays.push(d);\n        }\n\n        setAvailableDates([startDate, ...arrOfDays, endDate]);\n      }\n    }\n  }, [startDate, endDate]);\n\n  const getDisabledMinutes = selectedHour => {\n    if (selectedHour === 1) {\n      return [30, 45];\n    }\n  };\n\n  const getSelectedDate = e => {\n    setSelectedDate(e.target.innerText);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"studentInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, grade && /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }\n  }, \"Your grade is \", grade), presence === \"NO\" && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 35\n    }\n  }, \"You were absent\"), time === null && presence === \"NOT YET\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Please choose exam date and time\"), availableDates && availableDates.map(val => {\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: getSelectedDate,\n      name: val,\n      size: \"small\",\n      shape: \"round\",\n      className: \"studentInfo_button\",\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, val);\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    minuteStep: 15,\n    format: \"h:mm\",\n    size: \"large\",\n    showNow: false,\n    hideDisabledOptions: true,\n    disabledMinutes: getDisabledMinutes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default StudentInfo;","map":{"version":3,"sources":["C:/Users/ferid/Desktop/Polito/Katya/client/src/components/Student/StudentInfo.jsx"],"names":["React","useEffect","useState","Button","TimePicker","moment","StudentInfo","props","availableDates","setAvailableDates","selectedDate","setSelectedDate","grade","time","presence","date","info","startDate","endDate","startTime","endTime","start","Date","end","difference","getDate","necessaryDays","arrOfDays","i","d","add","format","length","push","getDisabledMinutes","selectedHour","getSelectedDate","e","target","innerText","map","val"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Button, TimePicker} from 'antd';\r\nimport moment from \"moment\";\r\nimport './StudentInfo.css'\r\n\r\nconst StudentInfo = (props) => {\r\n    const [availableDates, setAvailableDates] = useState([])\r\n    const [selectedDate, setSelectedDate] = useState(\"\")\r\n    const {grade, time, presence, date = {}} = props.info\r\n    let {startDate, endDate, startTime, endTime} = date\r\n\r\n    useEffect(() => {\r\n        if (availableDates) {\r\n            let start = new Date(startDate)\r\n            let end = new Date(endDate)\r\n            let difference = end.getDate() - start.getDate()\r\n            if (difference === 1) {\r\n                setAvailableDates([startDate, endDate])\r\n            } else if (difference === 0) {\r\n                setAvailableDates([startDate])\r\n            } else {\r\n                let necessaryDays = difference - 1\r\n                let arrOfDays = []\r\n                for (let i = 0; i < necessaryDays; i++) {\r\n                    let d = moment(startDate).add(1, \"days\").format(\"YYYY-MM-DD\")\r\n                    if (arrOfDays.length !== 0) {\r\n\r\n                        let d = moment(arrOfDays[arrOfDays.length - 1]).add(1, \"days\").format(\"YYYY-MM-DD\")\r\n                        arrOfDays.push(d)\r\n                    }\r\n                    arrOfDays.push(d)\r\n                }\r\n\r\n                setAvailableDates([startDate, ...arrOfDays, endDate])\r\n\r\n            }\r\n\r\n        }\r\n    }, [startDate, endDate])\r\n\r\n    const getDisabledMinutes = (selectedHour) => {\r\n        if (selectedHour === 1) {\r\n            return [30, 45]\r\n        }\r\n    }\r\n\r\n    const getSelectedDate=(e)=>{\r\n\r\n        setSelectedDate(e.target.innerText)\r\n    }\r\n\r\n    return (\r\n        <div className=\"studentInfo\">\r\n            {grade && <strong>Your grade is {grade}</strong>}\r\n            {presence === \"NO\" && <p>You were absent</p>}\r\n            {/* if student have time show it and option to delete appointment*/}\r\n            {time === null && presence === \"NOT YET\" &&\r\n            <div>\r\n                <p>Please choose exam date and time</p>\r\n                {availableDates &&\r\n                availableDates.map((val) => {\r\n\r\n                    return (\r\n                        <Button\r\n                            onClick={getSelectedDate} name={val} size=\"small\"\r\n                            shape=\"round\" className=\"studentInfo_button\" type=\"primary\">\r\n                              {val}\r\n                        </Button>\r\n                    )\r\n                })\r\n                }\r\n                <div>\r\n                    <TimePicker minuteStep={15} format=\"h:mm\" size=\"large\"\r\n                                showNow={false}\r\n                                hideDisabledOptions\r\n                                disabledMinutes={getDisabledMinutes}\r\n                    />\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentInfo\r\n\r\n"]},"metadata":{},"sourceType":"module"}