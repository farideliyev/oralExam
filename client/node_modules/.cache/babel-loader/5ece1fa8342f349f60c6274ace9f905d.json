{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferid\\\\Desktop\\\\Polito\\\\Katya\\\\client\\\\src\\\\hoc\\\\withAuthRedirect.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../auth/authContext\";\nimport { useHistory } from \"react-router\";\nexport const withAuthRedirect = Component => {\n  return function () {\n    const {\n      state\n    } = useContext(AuthContext);\n    const [status, setStatus] = useState(null);\n    const [serverError, setServerError] = useState(\"\");\n    const history = useHistory();\n    useEffect(() => {\n      fetchToAdmin();\n    }, []);\n\n    async function fetchToAdmin() {\n      let response = await fetch(\"http://localhost:3000/api/admin\");\n\n      if (response.status === 200) {\n        let responseJson = await response.json();\n        state.user = responseJson;\n        setStatus(response.status);\n      } else if (response.status === 401) {\n        history.push('/');\n      } else if (response.status === 403) {\n        debugger;\n        let responseJson = await response.json();\n        setStatus(403);\n        setServerError(responseJson);\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, status === 200 && /*#__PURE__*/React.createElement(Component, {\n      user: state.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 28\n      }\n    }), status === 403 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }\n    }, serverError));\n  };\n};","map":{"version":3,"sources":["C:/Users/ferid/Desktop/Polito/Katya/client/src/hoc/withAuthRedirect.js"],"names":["React","useContext","useEffect","useState","AuthContext","useHistory","withAuthRedirect","Component","state","status","setStatus","serverError","setServerError","history","fetchToAdmin","response","fetch","responseJson","json","user","push"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAASC,UAAT,QAA0B,cAA1B;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AAE7C,SAAO,YAAY;AACjB,UAAM;AAACC,MAAAA;AAAD,QAAUP,UAAU,CAACG,WAAD,CAA1B;AACA,UAAM,CAACK,MAAD,EAASC,SAAT,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,UAAM,CAACQ,WAAD,EAAcC,cAAd,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,UAAMU,OAAO,GAACR,UAAU,EAAxB;AAEAH,IAAAA,SAAS,CAAC,MAAI;AACZY,MAAAA,YAAY;AACb,KAFQ,EAEN,EAFM,CAAT;;AAIA,mBAAeA,YAAf,GAA6B;AAE3B,UAAIC,QAAQ,GAAE,MAAMC,KAAK,CAAC,iCAAD,CAAzB;;AAEA,UAAGD,QAAQ,CAACN,MAAT,KAAkB,GAArB,EAAyB;AACvB,YAAIQ,YAAY,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAxB;AACAV,QAAAA,KAAK,CAACW,IAAN,GAAWF,YAAX;AACCP,QAAAA,SAAS,CAACK,QAAQ,CAACN,MAAV,CAAT;AACF,OAJD,MAIO,IAAGM,QAAQ,CAACN,MAAT,KAAkB,GAArB,EAAyB;AAE9BI,QAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACD,OAHM,MAIF,IAAGL,QAAQ,CAACN,MAAT,KAAkB,GAArB,EAAyB;AAC5B;AACA,YAAIQ,YAAY,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAxB;AACCR,QAAAA,SAAS,CAAC,GAAD,CAAT;AACDE,QAAAA,cAAc,CAACK,YAAD,CAAd;AACD;AACF;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,MAAM,KAAG,GAAT,iBAAgB,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAED,KAAK,CAACW,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,EAEGV,MAAM,KAAG,GAAT,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAME,WAAN,CAFnB,CADJ;AAOD,GArCD;AAsCD,CAxCM","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\r\nimport {AuthContext} from \"../auth/authContext\";\r\nimport { useHistory} from \"react-router\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  return function () {\r\n    const {state} = useContext(AuthContext)\r\n    const [status, setStatus]=useState(null)\r\n    const [serverError, setServerError]=useState(\"\")\r\n    const history=useHistory()\r\n\r\n    useEffect(()=>{\r\n      fetchToAdmin()\r\n    }, [])\r\n\r\n    async function fetchToAdmin(){\r\n\r\n      let response= await fetch(\"http://localhost:3000/api/admin\")\r\n\r\n      if(response.status===200){\r\n        let responseJson= await response.json()\r\n        state.user=responseJson\r\n         setStatus(response.status)\r\n      } else if(response.status===401){\r\n\r\n        history.push('/')\r\n      }\r\n      else if(response.status===403){\r\n        debugger\r\n        let responseJson= await response.json()\r\n         setStatus(403)\r\n        setServerError(responseJson)\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          {status===200 && <Component user={state.user}/>}\r\n          {status===403 && <div>{serverError}</div>}\r\n        </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}