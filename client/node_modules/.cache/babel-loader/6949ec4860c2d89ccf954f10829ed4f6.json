{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferid\\\\Desktop\\\\Polito\\\\Katya\\\\client\\\\src\\\\components\\\\Admin\\\\Add_Session\\\\addSession.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\n\nconst AddSession = () => {\n  const [courses, setCourses] = useState(\"\");\n  const [students, setStudents] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  const [startDate, setStartDate] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [slotDuration, setSlotDuration] = useState(0);\n  const [sessionDuration, setSessionDuration] = useState(0);\n  const [numOfSessions, setNumOfSessions] = useState(0);\n  useEffect(() => {\n    getCourses();\n    getAvailableStudents();\n    if (slotDuration && sessionDuration) calculateNumOfSessions();\n  }, [slotDuration, sessionDuration]); // fetch to get courses\n\n  const getCourses = async () => {\n    let response = await fetch(\"http://localhost:3000/api/courses/all\");\n    let responseJson = await response.json();\n    setCourses(responseJson);\n  }; //make fetch to extract available students\n\n\n  const getAvailableStudents = async () => {\n    let response = await fetch(\"http://localhost:3000/api/students/available\");\n    let responseJson = await response.json();\n    setStudents(responseJson);\n  }; //make calculate session work\n\n\n  const calculateNumOfSessions = () => {\n    let sessionDurationInMinutes = sessionDuration * 60;\n    let numbOfStudentsForOneSlot = sessionDurationInMinutes / slotDuration;\n\n    if (numbOfStudentsForOneSlot >= students.length) {\n      setNumOfSessions(1);\n    } else if (numbOfStudentsForOneSlot < students.length) {\n      setNumOfSessions(Math.ceil(students.length / numbOfStudentsForOneSlot));\n    }\n  }; //send created call to db\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(selectedCourse);\n    console.log(startDate);\n    let sessionStartDateTime = startDate + \" \" + startTime + \":00\";\n    console.log(sessionStartDateTime);\n    console.log(slotDuration);\n    console.log(sessionDuration);\n    console.log(numOfSessions);\n    let lastDateForSession = new Date(startDate);\n    lastDateForSession.setDate(lastDateForSession.getDate() + (numOfSessions - 1));\n    let lastDateForSessionForDB = lastDateForSession.getFullYear() + \"-\" + (lastDateForSession.getMonth() + 1) + \"-\" + lastDateForSession.getDate();\n    console.log(\"lastDateForSession: \", lastDateForSessionForDB);\n    let lastTimeForSlot = new Date(sessionStartDateTime);\n    lastTimeForSlot.setHours(lastTimeForSlot.getHours() + sessionDuration);\n    let lasTimeForSlotForDB = lastTimeForSlot.toLocaleTimeString();\n    console.log(\"lastTimeForSlot: \", lasTimeForSlotForDB);\n    const month = new Date(startDate);\n    const monthForDB = month.toLocaleString('en-En', {\n      month: 'long'\n    });\n    console.log(\"exam month:\", monthForDB);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    row: true,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Add an exam session for Course\", /*#__PURE__*/React.createElement(\"select\", {\n    required: true,\n    onChange: e => setSelectedCourse(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    disabled: true,\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Please select...\"), courses ? courses.map((val, index) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      name: val.crsName,\n      value: val.crsName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 32\n      }\n    }, val.crsName);\n  }) : /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 27\n    }\n  }, \"Loading\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"frmstudentnum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Number of students for this course is  \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 63\n    }\n  }, \" \", students.length), \" \"))), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"List of available students\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    defaultValue: \"Choose...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, students ? students.map(val => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, `${val.name} ${val.surname} (${val.student_id})`);\n  }) : /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 26\n    }\n  }, \"Loading\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"sessiondate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Start date of the exam session\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"date\",\n    onChange: e => setStartDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"sessiontime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Start time of the exam session\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"time\",\n    onChange: e => setStartTime(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"slotDuration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Duration of the slot(minutes)\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    min: \"1\",\n    max: \"60\",\n    placeholder: \"10\",\n    onChange: e => {\n      setSlotDuration(Number(e.target.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"sessionDuration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"Duration of the session(hours)\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    min: \"1\",\n    max: \"60\",\n    placeholder: \"10\",\n    onChange: e => {\n      setSessionDuration(Number(e.target.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"studNumForSession\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Number of students for this exam session\"), /*#__PURE__*/React.createElement(Form.Control, {\n    id: \"studNumForSession\",\n    min: \"1\",\n    placeholder: \"10\",\n    value: students.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"allNumOfSessions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, \"Number of needed sessions\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"allNumOfSessions\",\n    id: \"allNumOfSessions\",\n    value: numOfSessions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"formGridCheckbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"I have checked all credentials and accepting the creation of the exam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onClick: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"Add the new session\")));\n};\n\nexport default AddSession;","map":{"version":3,"sources":["C:/Users/ferid/Desktop/Polito/Katya/client/src/components/Admin/Add_Session/addSession.jsx"],"names":["React","useEffect","useState","Form","Button","Col","AddSession","courses","setCourses","students","setStudents","selectedCourse","setSelectedCourse","startDate","setStartDate","startTime","setStartTime","slotDuration","setSlotDuration","sessionDuration","setSessionDuration","numOfSessions","setNumOfSessions","getCourses","getAvailableStudents","calculateNumOfSessions","response","fetch","responseJson","json","sessionDurationInMinutes","numbOfStudentsForOneSlot","length","Math","ceil","handleSubmit","e","preventDefault","console","log","sessionStartDateTime","lastDateForSession","Date","setDate","getDate","lastDateForSessionForDB","getFullYear","getMonth","lastTimeForSlot","setHours","getHours","lasTimeForSlotForDB","toLocaleTimeString","month","monthForDB","toLocaleString","target","value","map","val","index","crsName","display","alignItems","justifyContent","name","surname","student_id","Number"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react';\r\nimport {Form,Button, Col, } from 'react-bootstrap'\r\n\r\nconst AddSession=()=>{\r\n    const [courses, setCourses]=useState(\"\");\r\n    const [students, setStudents]=useState([]);\r\n    const [selectedCourse, setSelectedCourse]=useState(null)\r\n    const [startDate, setStartDate]=useState(\"\")\r\n    const [startTime, setStartTime]=useState(\"\")\r\n    const [slotDuration, setSlotDuration]=useState(0)\r\n    const [sessionDuration, setSessionDuration]=useState(0)\r\n    const [numOfSessions, setNumOfSessions]=useState(0)\r\n\r\n    useEffect(()=>{\r\n        getCourses();\r\n        getAvailableStudents();\r\n        if(slotDuration && sessionDuration) calculateNumOfSessions()\r\n    }, [slotDuration, sessionDuration])\r\n\r\n    // fetch to get courses\r\n    const getCourses=async ()=>{\r\n        let response= await fetch(\"http://localhost:3000/api/courses/all\")\r\n        let responseJson=await response.json()\r\n        setCourses(responseJson);\r\n    }\r\n\r\n        //make fetch to extract available students\r\n    const getAvailableStudents=async ()=>{\r\n        let response= await fetch(\"http://localhost:3000/api/students/available\")\r\n        let responseJson=await response.json()\r\n        setStudents(responseJson);\r\n    }\r\n\r\n        //make calculate session work\r\n\r\n       const calculateNumOfSessions=()=>{\r\n\r\n         let sessionDurationInMinutes=sessionDuration * 60;\r\n         let numbOfStudentsForOneSlot=sessionDurationInMinutes/slotDuration;\r\n         if(numbOfStudentsForOneSlot>=students.length){\r\n             setNumOfSessions(1)\r\n         } else if(numbOfStudentsForOneSlot<students.length) {\r\n             setNumOfSessions(Math.ceil(students.length / numbOfStudentsForOneSlot));\r\n         }\r\n       }\r\n\r\n\r\n    //send created call to db\r\n       const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        console.log(selectedCourse);\r\n        console.log(startDate);\r\n        let sessionStartDateTime=startDate + \" \" + startTime+\":00\";\r\n        console.log(sessionStartDateTime)\r\n        console.log(slotDuration);\r\n        console.log(sessionDuration)\r\n        console.log(numOfSessions)\r\n        let lastDateForSession=new Date(startDate);\r\n         lastDateForSession.setDate(lastDateForSession.getDate()+(numOfSessions-1));\r\n        let lastDateForSessionForDB=\r\n            lastDateForSession.getFullYear() + \"-\" + (lastDateForSession.getMonth() + 1) + \"-\"+ lastDateForSession.getDate();\r\n\r\n         console.log(\"lastDateForSession: \", lastDateForSessionForDB);\r\n        let lastTimeForSlot=new Date(sessionStartDateTime)\r\n           lastTimeForSlot.setHours(lastTimeForSlot.getHours()+sessionDuration);\r\n        let lasTimeForSlotForDB=lastTimeForSlot.toLocaleTimeString()\r\n        console.log(\"lastTimeForSlot: \", lasTimeForSlotForDB);\r\n        const month = new Date(startDate);\r\n           const monthForDB=month.toLocaleString('en-En', { month: 'long' });\r\n\r\n        console.log(\"exam month:\", monthForDB)\r\n\r\n\r\n       }\r\n\r\n\r\n    return(\r\n        <>\r\n        <Form row sm={4}>\r\n            <h3>Add an exam session for Course\r\n                <select required onChange={e=>setSelectedCourse(e.target.value)} >\r\n                    <option disabled selected>Please select...</option>\r\n                    {courses\r\n                        ?\r\n                        courses.map((val,index)=>{\r\n                           return (\r\n                               <option key={index} name={val.crsName} value={val.crsName}>{val.crsName}</option>\r\n                           )\r\n                        })\r\n                        : <option>Loading</option>\r\n                    }\r\n                </select>\r\n            </h3>\r\n            <Form.Row >\r\n                <Form.Group as={Col} controlId=\"frmstudentnum\">\r\n                    <Form.Label style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                    }}>Number of students for this course is  <strong> { students.length}</strong> </Form.Label>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Form.Group>\r\n                <Form.Label>List of available students</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue=\"Choose...\">\r\n                    {students\r\n                        ? students.map((val)=>{\r\n                            return (\r\n                                <option>{`${val.name} ${val.surname} (${val.student_id})`}</option>\r\n                            )\r\n                        })\r\n\r\n                        :<option>Loading</option>\r\n                    }\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"sessiondate\">\r\n                <Form.Label>Start date of the exam session</Form.Label>\r\n                <Form.Control type=\"date\" onChange={\r\n                    (e)=>setStartDate(e.target.value)}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"sessiontime\">\r\n                <Form.Label>Start time of the exam session</Form.Label>\r\n                <Form.Control\r\n                    type=\"time\"\r\n                    onChange={\r\n                        (e)=>setStartTime(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Row>\r\n                <Form.Group  controlId=\"slotDuration\">\r\n                    <Form.Label>Duration of the slot(minutes)</Form.Label>\r\n                    <Form.Control type=\"number\" min=\"1\" max=\"60\" placeholder=\"10\" onChange={e=>{setSlotDuration(Number(e.target.value))}} />\r\n                </Form.Group>\r\n\r\n                <Form.Group  controlId=\"sessionDuration\">\r\n                    <Form.Label>Duration of the session(hours)</Form.Label>\r\n                    <Form.Control type=\"number\" min=\"1\" max=\"60\" placeholder=\"10\"  onChange={e=>{setSessionDuration(Number(e.target.value))}} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"studNumForSession\">\r\n                    <Form.Label>Number of students for this exam session</Form.Label>\r\n                    <Form.Control  id=\"studNumForSession\" min=\"1\"  placeholder=\"10\" value={students.length} />\r\n                </Form.Group>\r\n\r\n                <Form.Group  controlId=\"allNumOfSessions\">\r\n                    <Form.Label>Number of needed sessions</Form.Label>\r\n                      <Form.Control type=\"allNumOfSessions\"  id=\"allNumOfSessions\" value={numOfSessions}/>\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group id=\"formGridCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"I have checked all credentials and accepting the creation of the exam\" />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n            }} onClick={(e)=>handleSubmit(e)}>\r\n                Add the new session\r\n            </Button>\r\n        </Form>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default AddSession\r\n\r\n"]},"metadata":{},"sourceType":"module"}