{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferid\\\\Desktop\\\\Polito\\\\Katya\\\\client\\\\src\\\\components\\\\Student\\\\StudentContainer.jsx\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from \"../../auth/authContext\";\nimport StudentProfile from \"./StudentProfile\";\n\nconst StudentContainer = props => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const [date, setDate] = useState(\"\");\n  let history = useHistory();\n  const {\n    fullName,\n    id,\n    time,\n    grade,\n    presence\n  } = state.student;\n  const info = {\n    time,\n    grade,\n    presence\n  };\n  let userId = props.match.params.id; // compare data in useReducer with url string\n\n  if (id) {\n    if (userId !== id) history.push('/student');\n  } //get student data after mounting page\n\n\n  useEffect(() => {\n    const fetchDataForStudent = async () => {\n      let response = await fetch(\"http://localhost:3000/api/students/admin\");\n\n      if (response.status === 200) {\n        let data = await response.json();\n        await dispatch({\n          type: \"STUDENT_LOGIN\",\n          payload: data.studentData\n        });\n      }\n    };\n\n    fetchDataForStudent();\n  }, []);\n\n  if (time === null && presence === \"NOT YET\") {\n    const fetchAvailableDates = useCallback(async () => {\n      let response = await fetch(\"http://localhost:3000/api/students/availableDates\");\n      let responseJson = await response.json();\n\n      if (date === \"\") {\n        setDate(responseJson);\n      }\n    });\n    fetchAvailableDates().then(r => console.log(r));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StudentProfile, {\n    fullName: fullName,\n    id: id,\n    info: info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default StudentContainer;","map":{"version":3,"sources":["C:/Users/ferid/Desktop/Polito/Katya/client/src/components/Student/StudentContainer.jsx"],"names":["React","useCallback","useContext","useEffect","useState","useHistory","AuthContext","StudentProfile","StudentContainer","props","state","dispatch","date","setDate","history","fullName","id","time","grade","presence","student","info","userId","match","params","push","fetchDataForStudent","response","fetch","status","data","json","type","payload","studentData","fetchAvailableDates","responseJson","then","r","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,SAAxC,EAAmDC,QAAnD,QAAkE,OAAlE;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBT,UAAU,CAACI,WAAD,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAIU,OAAO,GAAGT,UAAU,EAAxB;AACA,QAAM;AAACU,IAAAA,QAAD;AAAWC,IAAAA,EAAX;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,MAAwCT,KAAK,CAACU,OAApD;AACA,QAAMC,IAAI,GAAG;AAACJ,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAb;AACA,MAAIG,MAAM,GAAGb,KAAK,CAACc,KAAN,CAAYC,MAAZ,CAAmBR,EAAhC,CANgC,CAQhC;;AACA,MAAGA,EAAH,EAAO;AACH,QAAGM,MAAM,KAAGN,EAAZ,EAAgBF,OAAO,CAACW,IAAR,CAAa,UAAb;AACnB,GAX+B,CAchC;;;AACAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,mBAAmB,GAAG,YAAY;AACpC,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAAD,CAA1B;;AACA,UAAID,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzB,YAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAjB;AACA,cAAMpB,QAAQ,CAAC;AAACqB,UAAAA,IAAI,EAAE,eAAP;AAAwBC,UAAAA,OAAO,EAAEH,IAAI,CAACI;AAAtC,SAAD,CAAd;AACH;AACJ,KAND;;AAOAR,IAAAA,mBAAmB;AACtB,GATQ,EASN,EATM,CAAT;;AAWA,MAAGT,IAAI,KAAG,IAAP,IAAeE,QAAQ,KAAG,SAA7B,EAAuC;AAEnC,UAAMgB,mBAAmB,GAAElC,WAAW,CAAC,YAAU;AAC7C,UAAI0B,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAD,CAA1B;AACA,UAAIQ,YAAY,GAAE,MAAMT,QAAQ,CAACI,IAAT,EAAxB;;AACA,UAAGnB,IAAI,KAAG,EAAV,EAAa;AACTC,QAAAA,OAAO,CAACuB,YAAD,CAAP;AACH;AACJ,KANqC,CAAtC;AAOAD,IAAAA,mBAAmB,GAAGE,IAAtB,CAA2BC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAhC;AACH;;AAGD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEvB,QAA1B;AAAoC,IAAA,EAAE,EAAEC,EAAxC;AAA4C,IAAA,IAAI,EAAEK,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAMH,CA7CD;;AA+CA,eAAeb,gBAAf","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport { useHistory} from 'react-router-dom';\r\nimport {AuthContext} from \"../../auth/authContext\";\r\nimport StudentProfile from \"./StudentProfile\";\r\n\r\n\r\nconst StudentContainer = (props) => {\r\n    const {state, dispatch} = useContext(AuthContext)\r\n    const [date, setDate]=useState(\"\")\r\n    let history = useHistory()\r\n    const {fullName, id, time, grade, presence} = state.student\r\n    const info = {time, grade, presence}\r\n    let userId = props.match.params.id\r\n\r\n    // compare data in useReducer with url string\r\n    if(id) {\r\n        if(userId!==id) history.push('/student')\r\n    }\r\n\r\n\r\n    //get student data after mounting page\r\n    useEffect(() => {\r\n        const fetchDataForStudent = async () => {\r\n            let response = await fetch(\"http://localhost:3000/api/students/admin\")\r\n            if (response.status === 200) {\r\n                let data = await response.json()\r\n                await dispatch({type: \"STUDENT_LOGIN\", payload: data.studentData})\r\n            }\r\n        }\r\n        fetchDataForStudent()\r\n    }, [])\r\n\r\n    if(time===null && presence===\"NOT YET\"){\r\n\r\n        const fetchAvailableDates= useCallback(async ()=>{\r\n            let response = await fetch(\"http://localhost:3000/api/students/availableDates\")\r\n            let responseJson= await response.json()\r\n            if(date===\"\"){\r\n                setDate(responseJson)\r\n            }\r\n        })\r\n        fetchAvailableDates().then(r => console.log(r))\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <StudentProfile fullName={fullName} id={id} info={info} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default StudentContainer\r\n\r\n"]},"metadata":{},"sourceType":"module"}