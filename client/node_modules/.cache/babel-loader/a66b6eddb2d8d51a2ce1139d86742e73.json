{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferid\\\\Desktop\\\\Polito\\\\Katya\\\\client\\\\src\\\\components\\\\Student\\\\StudentInfo.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, TimePicker } from 'antd';\nimport moment from \"moment\";\nimport './StudentInfo.css';\n\nconst StudentInfo = props => {\n  const [availableDates, setAvailableDates] = useState([]);\n  const [selectedDateTime, setSelectedDateTime] = useState({\n    date: \"\",\n    time: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const {\n    grade,\n    time,\n    presence,\n    date = {}\n  } = props.info;\n  let {\n    startDate,\n    endDate,\n    startTime,\n    endTime\n  } = date;\n  useEffect(() => {\n    if (availableDates) {\n      let start = new Date(startDate);\n      let end = new Date(endDate);\n      let difference = end.getDate() - start.getDate();\n\n      if (difference === 1) {\n        setAvailableDates([startDate, endDate]);\n      } else if (difference === 0) {\n        setAvailableDates([startDate]);\n      } else {\n        let necessaryDays = difference - 1;\n        let arrOfDays = [];\n\n        for (let i = 0; i < necessaryDays; i++) {\n          let d = moment(startDate).add(1, \"days\").format(\"YYYY-MM-DD\");\n\n          if (arrOfDays.length !== 0) {\n            let d = moment(arrOfDays[arrOfDays.length - 1]).add(1, \"days\").format(\"YYYY-MM-DD\");\n            arrOfDays.push(d);\n          }\n\n          arrOfDays.push(d);\n        }\n\n        setAvailableDates([startDate, ...arrOfDays, endDate]);\n      }\n    }\n  }, [startDate, endDate]);\n\n  const handleCheck = e => {\n    e.preventDefault();\n    let response = fetch();\n  };\n\n  const getDisabledMinutes = selectedHour => {\n    if (selectedHour === 1) {\n      return [30, 45];\n    }\n  };\n\n  const getSelectedDate = e => {\n    let inner = e.target.innerText;\n    setSelectedDateTime(prevState => ({ ...prevState,\n      date: inner\n    }));\n  };\n\n  const getSelectedTime = (time, timeString) => {\n    let formattedTime = timeString + \":00\";\n    setSelectedDateTime(prevState => ({ ...prevState,\n      time: formattedTime\n    }));\n  };\n\n  function range(start, end) {\n    const result = [];\n\n    for (let i = start; i < end; i++) {\n      result.push(i);\n    }\n\n    return result;\n  }\n\n  function disabledHours() {\n    const hours = range(0, 60);\n    let sT = startTime.split(\":\")[0];\n    let eT = endTime.split(\":\")[0];\n    let step = eT - sT + 1;\n    hours.splice(sT, step);\n    return hours;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"studentInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, grade && /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }\n  }, \"Your grade is \", grade), presence === \"NO\" && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 35\n    }\n  }, \"You were absent\"), time === null && presence === \"NOT YET\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Please choose exam date and time\"), availableDates && availableDates.map(val => {\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: getSelectedDate,\n      name: val,\n      size: \"small\",\n      shape: \"round\",\n      className: \"studentInfo_button\",\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, val);\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    minuteStep: 15,\n    size: \"large\",\n    showNow: false,\n    format: \"HH:mm\",\n    hideDisabledOptions: true,\n    disabledHours: disabledHours,\n    disabledMinutes: getDisabledMinutes,\n    onChange: getSelectedTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    type: \"primary\",\n    className: \"studentInfo_button-check\",\n    loading: loading,\n    onClick: handleCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Add if datetime\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, `${selectedDateTime.date} ${selectedDateTime.time}`), \"available\"))));\n};\n\nexport default StudentInfo;","map":{"version":3,"sources":["C:/Users/ferid/Desktop/Polito/Katya/client/src/components/Student/StudentInfo.jsx"],"names":["React","useEffect","useState","Button","TimePicker","moment","StudentInfo","props","availableDates","setAvailableDates","selectedDateTime","setSelectedDateTime","date","time","loading","setLoading","grade","presence","info","startDate","endDate","startTime","endTime","start","Date","end","difference","getDate","necessaryDays","arrOfDays","i","d","add","format","length","push","handleCheck","e","preventDefault","response","fetch","getDisabledMinutes","selectedHour","getSelectedDate","inner","target","innerText","prevState","getSelectedTime","timeString","formattedTime","range","result","disabledHours","hours","sT","split","eT","step","splice","map","val"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,EAAgBC,UAAhB,QAAiC,MAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC;AAACU,IAAAA,IAAI,EAAC,EAAN;AAAUC,IAAAA,IAAI,EAAC;AAAf,GAAD,CAAxD;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAACc,IAAAA,KAAD;AAAQH,IAAAA,IAAR;AAAcI,IAAAA,QAAd;AAAwBL,IAAAA,IAAI,GAAG;AAA/B,MAAqCL,KAAK,CAACW,IAAjD;AACA,MAAI;AAACC,IAAAA,SAAD;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,SAArB;AAAgCC,IAAAA;AAAhC,MAA2CV,IAA/C;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,cAAJ,EAAoB;AAChB,UAAIe,KAAK,GAAG,IAAIC,IAAJ,CAASL,SAAT,CAAZ;AACA,UAAIM,GAAG,GAAG,IAAID,IAAJ,CAASJ,OAAT,CAAV;AACA,UAAIM,UAAU,GAAGD,GAAG,CAACE,OAAJ,KAAgBJ,KAAK,CAACI,OAAN,EAAjC;;AACA,UAAID,UAAU,KAAK,CAAnB,EAAsB;AAClBjB,QAAAA,iBAAiB,CAAC,CAACU,SAAD,EAAYC,OAAZ,CAAD,CAAjB;AACH,OAFD,MAEO,IAAIM,UAAU,KAAK,CAAnB,EAAsB;AACzBjB,QAAAA,iBAAiB,CAAC,CAACU,SAAD,CAAD,CAAjB;AACH,OAFM,MAEA;AACH,YAAIS,aAAa,GAAGF,UAAU,GAAG,CAAjC;AACA,YAAIG,SAAS,GAAG,EAAhB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,aAApB,EAAmCE,CAAC,EAApC,EAAwC;AACpC,cAAIC,CAAC,GAAG1B,MAAM,CAACc,SAAD,CAAN,CAAkBa,GAAlB,CAAsB,CAAtB,EAAyB,MAAzB,EAAiCC,MAAjC,CAAwC,YAAxC,CAAR;;AACA,cAAIJ,SAAS,CAACK,MAAV,KAAqB,CAAzB,EAA4B;AAExB,gBAAIH,CAAC,GAAG1B,MAAM,CAACwB,SAAS,CAACA,SAAS,CAACK,MAAV,GAAmB,CAApB,CAAV,CAAN,CAAwCF,GAAxC,CAA4C,CAA5C,EAA+C,MAA/C,EAAuDC,MAAvD,CAA8D,YAA9D,CAAR;AACAJ,YAAAA,SAAS,CAACM,IAAV,CAAeJ,CAAf;AACH;;AACDF,UAAAA,SAAS,CAACM,IAAV,CAAeJ,CAAf;AACH;;AAEDtB,QAAAA,iBAAiB,CAAC,CAACU,SAAD,EAAY,GAAGU,SAAf,EAA0BT,OAA1B,CAAD,CAAjB;AAEH;AAEJ;AACJ,GA3BQ,EA2BN,CAACD,SAAD,EAAYC,OAAZ,CA3BM,CAAT;;AA6BA,QAAMgB,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACE,QAAIC,QAAQ,GAACC,KAAK,EAAlB;AACH,GAHD;;AAKA,QAAMC,kBAAkB,GAAIC,YAAD,IAAkB;AACzC,QAAIA,YAAY,KAAK,CAArB,EAAwB;AACpB,aAAO,CAAC,EAAD,EAAK,EAAL,CAAP;AACH;AACJ,GAJD;;AAMA,QAAMC,eAAe,GAAEN,CAAD,IAAK;AACvB,QAAIO,KAAK,GAACP,CAAC,CAACQ,MAAF,CAASC,SAAnB;AACAnC,IAAAA,mBAAmB,CAACoC,SAAS,KAAK,EAAC,GAAGA,SAAJ;AAAenC,MAAAA,IAAI,EAACgC;AAApB,KAAL,CAAV,CAAnB;AACH,GAHD;;AAKA,QAAMI,eAAe,GAAC,CAACnC,IAAD,EAAOoC,UAAP,KAAoB;AACtC,QAAIC,aAAa,GAACD,UAAU,GAAE,KAA9B;AACCtC,IAAAA,mBAAmB,CAACoC,SAAS,KAAK,EAAC,GAAGA,SAAJ;AAAelC,MAAAA,IAAI,EAACqC;AAApB,KAAL,CAAV,CAAnB;AACJ,GAHD;;AAKA,WAASC,KAAT,CAAe5B,KAAf,EAAsBE,GAAtB,EAA2B;AACvB,UAAM2B,MAAM,GAAG,EAAf;;AACA,SAAK,IAAItB,CAAC,GAAGP,KAAb,EAAoBO,CAAC,GAAGL,GAAxB,EAA6BK,CAAC,EAA9B,EAAkC;AAC9BsB,MAAAA,MAAM,CAACjB,IAAP,CAAYL,CAAZ;AACH;;AACD,WAAOsB,MAAP;AACH;;AAED,WAASC,aAAT,GAAyB;AACrB,UAAMC,KAAK,GAAGH,KAAK,CAAC,CAAD,EAAI,EAAJ,CAAnB;AACA,QAAII,EAAE,GAAGlC,SAAS,CAACmC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAT;AACA,QAAIC,EAAE,GAAGnC,OAAO,CAACkC,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAT;AACA,QAAIE,IAAI,GAAED,EAAE,GAACF,EAAJ,GAAQ,CAAjB;AACAD,IAAAA,KAAK,CAACK,MAAN,CAAaJ,EAAb,EAAiBG,IAAjB;AACA,WAAOJ,KAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKtC,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAuBA,KAAvB,CADd,EAEKC,QAAQ,KAAK,IAAb,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAF1B,EAIKJ,IAAI,KAAK,IAAT,IAAiBI,QAAQ,KAAK,SAA9B,iBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,EAEKT,cAAc,IACfA,cAAc,CAACoD,GAAf,CAAoBC,GAAD,IAAS;AAExB,wBACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAElB,eADb;AAC8B,MAAA,IAAI,EAAEkB,GADpC;AACyC,MAAA,IAAI,EAAC,OAD9C;AAEI,MAAA,KAAK,EAAC,OAFV;AAEkB,MAAA,SAAS,EAAC,oBAF5B;AAEiD,MAAA,IAAI,EAAC,SAFtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGOA,GAHP,CADJ;AAOH,GATD,CAHJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAE,EAAxB;AAA6B,IAAA,IAAI,EAAC,OAAlC;AACY,IAAA,OAAO,EAAE,KADrB;AAEY,IAAA,MAAM,EAAC,OAFnB;AAGY,IAAA,mBAAmB,MAH/B;AAIY,IAAA,aAAa,EAAER,aAJ3B;AAKY,IAAA,eAAe,EAAEZ,kBAL7B;AAMY,IAAA,QAAQ,EAAEO,eANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAdJ,eAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,IAAI,EAAC,SAA1B;AACQ,IAAA,SAAS,EAAC,0BADlB;AAC6C,IAAA,OAAO,EAAElC,OADtD;AAEQ,IAAA,OAAO,EAAEsB,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,GAAE1B,gBAAgB,CAACE,IAAK,IAAGF,gBAAgB,CAACG,IAAK,EAAzD,CAPJ,cADJ,CAxBJ,CALJ,CADJ;AA8CH,CAxHD;;AA0HA,eAAeP,WAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Button, TimePicker} from 'antd';\r\nimport moment from \"moment\";\r\nimport './StudentInfo.css'\r\n\r\nconst StudentInfo = (props) => {\r\n    const [availableDates, setAvailableDates] = useState([])\r\n    const [selectedDateTime, setSelectedDateTime] = useState({date:\"\", time:\"\"})\r\n    const [loading, setLoading] = useState(false)\r\n    const {grade, time, presence, date = {}} = props.info\r\n    let {startDate, endDate, startTime, endTime} = date\r\n\r\n    useEffect(() => {\r\n        if (availableDates) {\r\n            let start = new Date(startDate)\r\n            let end = new Date(endDate)\r\n            let difference = end.getDate() - start.getDate()\r\n            if (difference === 1) {\r\n                setAvailableDates([startDate, endDate])\r\n            } else if (difference === 0) {\r\n                setAvailableDates([startDate])\r\n            } else {\r\n                let necessaryDays = difference - 1\r\n                let arrOfDays = []\r\n                for (let i = 0; i < necessaryDays; i++) {\r\n                    let d = moment(startDate).add(1, \"days\").format(\"YYYY-MM-DD\")\r\n                    if (arrOfDays.length !== 0) {\r\n\r\n                        let d = moment(arrOfDays[arrOfDays.length - 1]).add(1, \"days\").format(\"YYYY-MM-DD\")\r\n                        arrOfDays.push(d)\r\n                    }\r\n                    arrOfDays.push(d)\r\n                }\r\n\r\n                setAvailableDates([startDate, ...arrOfDays, endDate])\r\n\r\n            }\r\n\r\n        }\r\n    }, [startDate, endDate])\r\n\r\n    const handleCheck = (e) => {\r\n      e.preventDefault()\r\n        let response=fetch()\r\n    }\r\n\r\n    const getDisabledMinutes = (selectedHour) => {\r\n        if (selectedHour === 1) {\r\n            return [30, 45]\r\n        }\r\n    }\r\n\r\n    const getSelectedDate=(e)=>{\r\n        let inner=e.target.innerText\r\n        setSelectedDateTime(prevState => ({...prevState, date:inner}))\r\n    }\r\n\r\n    const getSelectedTime=(time, timeString)=>{\r\n        let formattedTime=timeString+ \":00\"\r\n         setSelectedDateTime(prevState => ({...prevState, time:formattedTime}))\r\n    }\r\n\r\n    function range(start, end) {\r\n        const result = [];\r\n        for (let i = start; i < end; i++) {\r\n            result.push(i);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function disabledHours() {\r\n        const hours = range(0, 60);\r\n        let sT = startTime.split(\":\")[0]\r\n        let eT = endTime.split(\":\")[0]\r\n        let step=(eT-sT)+1\r\n        hours.splice(sT, step);\r\n        return hours;\r\n    }\r\n\r\n    return (\r\n        <div className=\"studentInfo\">\r\n            {grade && <strong>Your grade is {grade}</strong>}\r\n            {presence === \"NO\" && <p>You were absent</p>}\r\n            {/* if student have time show it and option to delete appointment*/}\r\n            {time === null && presence === \"NOT YET\" &&\r\n            <div>\r\n                <p>Please choose exam date and time</p>\r\n                {availableDates &&\r\n                availableDates.map((val) => {\r\n\r\n                    return (\r\n                        <Button\r\n                            onClick={getSelectedDate} name={val} size=\"small\"\r\n                            shape=\"round\" className=\"studentInfo_button\" type=\"primary\">\r\n                              {val}\r\n                        </Button>\r\n                    )\r\n                })\r\n                }\r\n                <div>\r\n                    <TimePicker minuteStep={15}  size=\"large\"\r\n                                showNow={false}\r\n                                format=\"HH:mm\"\r\n                                hideDisabledOptions\r\n                                disabledHours={disabledHours}\r\n                                disabledMinutes={getDisabledMinutes}\r\n                                onChange={getSelectedTime}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Button size=\"large\" type=\"primary\"\r\n                            className=\"studentInfo_button-check\" loading={loading}\r\n                            onClick={handleCheck}\r\n\r\n                    >\r\n\r\n                        Add if datetime\r\n                        <span>{`${selectedDateTime.date} ${selectedDateTime.time}`}</span>\r\n                        available\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentInfo\r\n\r\n"]},"metadata":{},"sourceType":"module"}