{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferid\\\\Desktop\\\\Polito\\\\Katya\\\\client\\\\src\\\\components\\\\Teacher\\\\Teacher.jsx\";\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport './Teacher.css';\nimport { Formik } from 'formik';\nimport * as Yup from \"yup\";\nimport { Redirect } from 'react-router-dom';\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\")\n});\n\nconst Teacher = props => {\n  const [isLoggedIn, setIsloggedIn] = useState(false);\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      setIsloggedIn(true);\n      ;\n    },\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, ({\n    errors,\n    touched,\n    handleChange,\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    name: \"email\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, errors.email) : null), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), errors.password && touched.password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, errors.password) : null), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\n\nexport default Teacher;","map":{"version":3,"sources":["C:/Users/ferid/Desktop/Polito/Katya/client/src/components/Teacher/Teacher.jsx"],"names":["React","useState","Form","Button","Formik","Yup","Redirect","validationSchema","object","shape","email","string","required","password","Teacher","props","isLoggedIn","setIsloggedIn","values","errors","touched","handleChange","handleSubmit"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport './Teacher.css';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n    .required(\"Email is required\"),\r\n    password: Yup.string()\r\n     .required(\"Password is required\")\r\n  });\r\n\r\nconst Teacher=(props)=>{\r\n     \r\n    const[isLoggedIn, setIsloggedIn]=useState(false);\r\n     \r\n    if(isLoggedIn){\r\n        return <Redirect to='/admin'/>\r\n    }\r\n    \r\n    return (\r\n        <Formik\r\n        initialValues={{email:\"\", password:\"\"}} \r\n        onSubmit={values=>{\r\n            setIsloggedIn(true);;\r\n        }}  \r\n        validationSchema={validationSchema}\r\n        > \r\n        {({errors,\r\n            touched,\r\n            handleChange,\r\n            handleSubmit\r\n           }) => (\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Enter email\"  \r\n                    name=\"email\"\r\n                    onChange={handleChange}  \r\n                    />\r\n                    {errors.email && touched.email\r\n                     ? (<div className=\"error-message\">{errors.email}</div>)\r\n                     : null\r\n                     }\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    />\r\n                     {errors.password && touched.password\r\n                     ? (<div className=\"error-message\">{errors.password}</div>)\r\n                     : null\r\n                     }\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n              </Button>\r\n            </Form>\r\n             )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n\r\nexport default Teacher"]},"metadata":{},"sourceType":"module"}