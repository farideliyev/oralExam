{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferid\\\\Desktop\\\\Polito\\\\Katya\\\\client\\\\src\\\\components\\\\Student\\\\Student.jsx\";\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport '../Teacher/Teacher.css';\nimport { Formik } from 'formik';\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router\";\nconst validationSchema = Yup.object().shape({\n  id: Yup.string().required(\"Student Id is required\")\n});\n\nconst Student = props => {\n  // const history = useHistory()\n  //\n  // async function handleFetch(id) {\n  //     let response = await fetch(\"https://localhost/api/student/login\")\n  //     if (response.status === 200) {\n  //         history.push('/student')\n  //     }\n  // }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"dafad\") // <Formik\n  //     initialValues={{id: \"\"}}\n  //     onSubmit={values => {\n  //         // handleFetch(values.id)\n  //       }\n  //     }\n  //     validationSchema={validationSchema}\n  // >\n  //     {({\n  //           errors,\n  //           touched,\n  //           handleChange,\n  //           handleSubmit\n  //\n  //       }) => (\n  //         <Form onSubmit={handleSubmit}>\n  //\n  //\n  //             <Form.Group controlId=\"formBasicEmail\">\n  //                 <Form.Label>Student Id</Form.Label>\n  //                 <Form.Control\n  //                     type=\"number\"\n  //                     placeholder=\"student id\"\n  //                     name=\"id\"\n  //                     onChange={handleChange}\n  //                     className={errors.id ? \"error\" : null}\n  //\n  //                 />\n  //                 {errors.id && touched.id\n  //                     ? (<div className=\"error-message\">{errors.id}</div>)\n  //                     : null\n  //                 }\n  //             </Form.Group>\n  //\n  //\n  //             <Button variant=\"primary\" type=\"submit\">\n  //                 Submit\n  //             </Button>\n  //         </Form>\n  //     )}\n  // </Formik>\n  ;\n};\n\nexport default Student;","map":{"version":3,"sources":["C:/Users/ferid/Desktop/Polito/Katya/client/src/components/Student/Student.jsx"],"names":["React","Form","Button","Formik","Yup","useHistory","validationSchema","object","shape","id","string","required","Student","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;AACA,OAAO,wBAAP;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AAGA,MAAMC,gBAAgB,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,EAAE,EAAEL,GAAG,CAACM,MAAJ,GACCC,QADD,CACU,wBADV;AADoC,CAAnB,CAAzB;;AAKA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CJ;AA4CH,CAtDD;;AAyDA,eAAeD,OAAf","sourcesContent":["import React from 'react';\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport '../Teacher/Teacher.css';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport {useHistory} from \"react-router\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    id: Yup.string()\r\n        .required(\"Student Id is required\"),\r\n});\r\n\r\nconst Student = (props) => {\r\n    // const history = useHistory()\r\n    //\r\n    // async function handleFetch(id) {\r\n    //     let response = await fetch(\"https://localhost/api/student/login\")\r\n    //     if (response.status === 200) {\r\n    //         history.push('/student')\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div>dafad</div>\r\n        // <Formik\r\n        //     initialValues={{id: \"\"}}\r\n        //     onSubmit={values => {\r\n        //         // handleFetch(values.id)\r\n        //       }\r\n        //     }\r\n        //     validationSchema={validationSchema}\r\n        // >\r\n        //     {({\r\n        //           errors,\r\n        //           touched,\r\n        //           handleChange,\r\n        //           handleSubmit\r\n        //\r\n        //       }) => (\r\n        //         <Form onSubmit={handleSubmit}>\r\n        //\r\n        //\r\n        //             <Form.Group controlId=\"formBasicEmail\">\r\n        //                 <Form.Label>Student Id</Form.Label>\r\n        //                 <Form.Control\r\n        //                     type=\"number\"\r\n        //                     placeholder=\"student id\"\r\n        //                     name=\"id\"\r\n        //                     onChange={handleChange}\r\n        //                     className={errors.id ? \"error\" : null}\r\n        //\r\n        //                 />\r\n        //                 {errors.id && touched.id\r\n        //                     ? (<div className=\"error-message\">{errors.id}</div>)\r\n        //                     : null\r\n        //                 }\r\n        //             </Form.Group>\r\n        //\r\n        //\r\n        //             <Button variant=\"primary\" type=\"submit\">\r\n        //                 Submit\r\n        //             </Button>\r\n        //         </Form>\r\n        //     )}\r\n        // </Formik>\r\n    )\r\n}\r\n\r\n\r\nexport default Student"]},"metadata":{},"sourceType":"module"}